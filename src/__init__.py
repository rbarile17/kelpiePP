from pathlib import Path
from typing import Any, Tuple

CONFIGS_PATH = "configs"
CONFIGS_PATH = Path(CONFIGS_PATH)

MODELS_PATH = "models"
MODELS_PATH = Path(MODELS_PATH)
MAX_PROCESSES = 8

RESULTS_PATH = "results"
RESULTS_PATH = Path(RESULTS_PATH)

DATA_PATH = "data"
DB50K = "DB50K"
DB100K = "DB100K"
FB15K = "FB15k"
FB15K_237 = "FB15k-237"
WN18 = "WN18"
WN18RR = "WN18RR"
YAGO3_10 = "YAGO3-10"
YAGO4_20 = "YAGO4-20"

CONVE = "ConvE"
COMPLEX = "ComplEx"
TRANSE = "TransE"

KELPIE = "kelpie"
DATA_POISONING = "data_poisoning"
CRIAGE = "criage"

NECESSARY = "necessary"
SUFFICIENT = "sufficient"

MODES = [NECESSARY, SUFFICIENT]
METHODS = [KELPIE, DATA_POISONING, CRIAGE]
DATASETS = [DB50K, DB100K, FB15K, FB15K_237, WN18, WN18RR, YAGO3_10, YAGO4_20]
MODELS = [CONVE, COMPLEX, TRANSE]

DATA_PATH = Path(DATA_PATH)
DB50K_PATH = DATA_PATH / DB50K
DB50K_REASONED_PATH = DB50K_PATH / "reasoned"

DB100K_PATH = DATA_PATH / DB100K
DB100K_MAPPED_PATH = DATA_PATH / DB100K / "mapped"
DB100K_REASONED_PATH = DB100K_PATH / "reasoned"

YAGO4_20_PATH = DATA_PATH / YAGO4_20
YAGO4_20_REASONED_PATH = YAGO4_20_PATH / "reasoned"

PREDICTIONS_PATH = Path("preds")
CORRECT_PREDICTIONS_PATH = Path("correct_preds")

EMBEDDINGS_PATH = Path("embeddings")

key = lambda x: x[1]

Triple = Tuple[Any, Any, Any]
